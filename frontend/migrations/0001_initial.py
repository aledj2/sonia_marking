# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('auditkey', models.AutoField(serialize=False, primary_key=True, db_column='AuditKey')),
                ('storagekey', models.IntegerField(db_column='StorageKey')),
                ('datemade', models.CharField(max_length=50, null=True, db_column='DateMade', blank=True)),
                ('supplier', models.IntegerField(null=True, db_column='Supplier', blank=True)),
                ('productcode', models.CharField(max_length=50, null=True, db_column='ProductCode', blank=True)),
                ('expirydate', models.CharField(max_length=50, null=True, db_column='ExpiryDate', blank=True)),
                ('batchnumber', models.CharField(max_length=50, null=True, db_column='BatchNumber', blank=True)),
                ('oligonumber', models.CharField(max_length=50, null=True, db_column='OligoNumber', blank=True)),
                ('shipmentdate', models.CharField(max_length=50, null=True, db_column='ShipmentDate', blank=True)),
                ('datereceived', models.DateField(null=True, db_column='DateReceived', blank=True)),
                ('fprimerauditkey', models.IntegerField(null=True, db_column='FPrimerAuditKey', blank=True)),
                ('rprimerauditkey', models.IntegerField(null=True, db_column='RPrimerAuditKey', blank=True)),
                ('dilutionauditkey', models.IntegerField(null=True, db_column='DilutionAuditKey', blank=True)),
                ('teh2olot', models.CharField(max_length=50, null=True, db_column='TEH2OLot', blank=True)),
                ('madeby', models.IntegerField(null=True, db_column='MadeBy', blank=True)),
            ],
            options={
                'db_table': 'audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=80)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(null=True, blank=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(unique=True, max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Blat',
            fields=[
                ('blatkey', models.AutoField(serialize=False, primary_key=True, db_column='BlatKey')),
                ('primerkey', models.IntegerField(db_column='PrimerKey')),
                ('strand', models.IntegerField(null=True, db_column='Strand', blank=True)),
                ('start', models.IntegerField(null=True, db_column='Start', blank=True)),
                ('stop', models.IntegerField(null=True, db_column='Stop', blank=True)),
                ('genomebuild', models.CharField(max_length=50, null=True, db_column='GenomeBuild', blank=True)),
            ],
            options={
                'db_table': 'blat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chromosome',
            fields=[
                ('chrid', models.IntegerField(serialize=False, primary_key=True, db_column='ChrID')),
                ('chr', models.CharField(max_length=50, null=True, db_column='Chr', blank=True)),
                ('chromosome', models.FloatField(null=True, db_column='Chromosome', blank=True)),
                ('size', models.FloatField(null=True, db_column='Size', blank=True)),
                ('sorting', models.IntegerField(null=True, db_column='Sorting', blank=True)),
            ],
            options={
                'db_table': 'chromosome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(null=True, blank=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geneshgnc140714',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('geneshgncid', models.IntegerField(db_column='GenesHGNCID')),
                ('hgncid', models.CharField(max_length=50, null=True, db_column='HGNCID', blank=True)),
                ('approvedsymbol', models.CharField(max_length=50, null=True, db_column='ApprovedSymbol', blank=True)),
                ('approvedname', models.CharField(max_length=750, null=True, db_column='ApprovedName', blank=True)),
                ('status', models.CharField(max_length=50, null=True, db_column='Status', blank=True)),
                ('locustype', models.CharField(max_length=255, null=True, db_column='LocusType', blank=True)),
                ('locusgroup', models.CharField(max_length=255, null=True, db_column='LocusGroup', blank=True)),
                ('previoussymbols', models.CharField(max_length=1000, null=True, db_column='PreviousSymbols', blank=True)),
                ('previousnames', models.CharField(max_length=1000, null=True, db_column='PreviousNames', blank=True)),
                ('synonyms', models.CharField(max_length=1000, null=True, db_column='Synonyms', blank=True)),
                ('namesynonyms', models.CharField(max_length=1000, null=True, db_column='NameSynonyms', blank=True)),
                ('chromosome', models.CharField(max_length=50, null=True, db_column='Chromosome', blank=True)),
                ('dateapproved', models.DateTimeField(null=True, db_column='DateApproved', blank=True)),
                ('datemodified', models.DateTimeField(null=True, db_column='DateModified', blank=True)),
                ('accessionnumbers', models.CharField(max_length=255, null=True, db_column='AccessionNumbers', blank=True)),
                ('specialistdatabaselinks', models.CharField(max_length=1000, null=True, db_column='SpecialistDatabaseLinks', blank=True)),
                ('specialistdatabaseids', models.CharField(max_length=1000, null=True, db_column='SpecialistDatabaseIDs', blank=True)),
                ('genefamilytag', models.CharField(max_length=1000, null=True, db_column='GeneFamilyTag', blank=True)),
                ('genefamilydescription', models.CharField(max_length=1000, null=True, db_column='GeneFamilyDescription', blank=True)),
                ('locusspecificdatabases', models.CharField(max_length=1000, null=True, db_column='LocusSpecificDatabases', blank=True)),
                ('entrezgeneidmapped', models.IntegerField(null=True, db_column='EntrezGeneIDmapped', blank=True)),
                ('omimidmapped', models.IntegerField(null=True, db_column='OMIMIDmapped', blank=True)),
                ('refseqmapped', models.CharField(max_length=50, null=True, db_column='RefSeqmapped', blank=True)),
                ('uniprotidmapped', models.CharField(max_length=50, null=True, db_column='UniProtIDmapped', blank=True)),
                ('ensemblidmapped', models.CharField(max_length=50, null=True, db_column='EnsemblIDmapped', blank=True)),
                ('ucscidmapped', models.CharField(max_length=50, null=True, db_column='UCSCIDmapped', blank=True)),
                ('refseqguys', models.CharField(max_length=50, null=True, db_column='RefSeqGuys', blank=True)),
                ('refseqguysupdated', models.DateTimeField(null=True, db_column='RefSeqGuysUpdated', blank=True)),
            ],
            options={
                'db_table': 'geneshgnc_140714',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenesrefseqHg19',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('genesrefseq_hg19id', models.IntegerField(db_column='GenesRefSeq_hg19ID')),
                ('chrid', models.IntegerField(null=True, db_column='ChrID', blank=True)),
                ('strand', models.CharField(max_length=50, null=True, db_column='Strand', blank=True)),
                ('start', models.IntegerField(null=True, db_column='Start', blank=True)),
                ('stop', models.IntegerField(null=True, db_column='Stop', blank=True)),
                ('geneid', models.IntegerField(null=True, db_column='GeneID', blank=True)),
            ],
            options={
                'db_table': 'genesrefseq_hg19',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsmamplicons',
            fields=[
                ('gsm_amplicon_key', models.AutoField(serialize=False, primary_key=True, db_column='GSM_AMPLICON_KEY')),
                ('amplicon_id', models.IntegerField(null=True, db_column='Amplicon_ID', blank=True)),
                ('amplicon_name', models.CharField(max_length=50, null=True, db_column='Amplicon_Name', blank=True)),
                ('amplicon_name_modified', models.CharField(max_length=50, null=True, db_column='Amplicon_Name_modified', blank=True)),
                ('exon', models.CharField(max_length=50, null=True, db_column='Exon', blank=True)),
            ],
            options={
                'db_table': 'gsmamplicons',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('itemid', models.AutoField(serialize=False, primary_key=True, db_column='ItemID')),
                ('item', models.CharField(max_length=255, null=True, db_column='Item', blank=True)),
                ('itemcategoryindex1id', models.IntegerField(null=True, db_column='ItemCategoryIndex1ID', blank=True)),
                ('itemcategoryindex2id', models.IntegerField(null=True, db_column='ItemCategoryIndex2ID', blank=True)),
                ('itemcategoryindex3id', models.IntegerField(null=True, db_column='ItemCategoryIndex3ID', blank=True)),
                ('itemcategoryindex4id', models.IntegerField(null=True, db_column='ItemCategoryIndex4ID', blank=True)),
                ('sorting', models.IntegerField(null=True, db_column='Sorting', blank=True)),
                ('abbreviated', models.CharField(max_length=50, null=True, db_column='Abbreviated', blank=True)),
            ],
            options={
                'db_table': 'item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Itemcategory',
            fields=[
                ('itemcategoryid', models.AutoField(serialize=False, primary_key=True, db_column='ItemCategoryID')),
                ('itemcategory', models.CharField(max_length=255, null=True, db_column='ItemCategory', blank=True)),
                ('categoryindex', models.IntegerField(null=True, db_column='CategoryIndex', blank=True)),
            ],
            options={
                'db_table': 'itemcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manipulateblatinfo',
            fields=[
                ('match', models.IntegerField(null=True, db_column='Match', blank=True)),
                ('mismatch', models.IntegerField(null=True, db_column='Mismatch', blank=True)),
                ('repmatches', models.IntegerField(null=True, db_column='RepMatches', blank=True)),
                ('ncount', models.IntegerField(null=True, db_column='nCount', blank=True)),
                ('qnuminsert', models.IntegerField(null=True, db_column='qNumInsert', blank=True)),
                ('qbaseinsert', models.IntegerField(null=True, db_column='qBaseInsert', blank=True)),
                ('tnuminsert', models.IntegerField(null=True, db_column='tNumInsert', blank=True)),
                ('tbaseinsert', models.IntegerField(null=True, db_column='tBaseInsert', blank=True)),
                ('strand', models.CharField(max_length=50, null=True, db_column='Strand', blank=True)),
                ('qname', models.CharField(max_length=50, serialize=False, primary_key=True, db_column='qName')),
                ('qsize', models.IntegerField(null=True, db_column='qSize', blank=True)),
                ('qstart', models.IntegerField(null=True, db_column='qStart', blank=True)),
                ('qend', models.IntegerField(null=True, db_column='qEnd', blank=True)),
                ('tname', models.CharField(max_length=50, null=True, db_column='tName', blank=True)),
                ('tsize', models.IntegerField(null=True, db_column='tSize', blank=True)),
                ('tstart', models.IntegerField(null=True, db_column='tStart', blank=True)),
                ('tend', models.IntegerField(null=True, db_column='tEnd', blank=True)),
                ('blockcount', models.IntegerField(null=True, db_column='BlockCount', blank=True)),
                ('blocksizes', models.CharField(max_length=50, null=True, db_column='BlockSizes', blank=True)),
                ('qstarts', models.CharField(max_length=50, null=True, db_column='qStarts', blank=True)),
                ('tstarts', models.CharField(max_length=50, null=True, db_column='tStarts', blank=True)),
                ('tsearchchr', models.CharField(max_length=50, null=True, db_column='tsearchChr', blank=True)),
                ('tsearchstart', models.IntegerField(null=True, db_column='tsearchStart', blank=True)),
                ('tsearchstop', models.IntegerField(null=True, db_column='tsearchStop', blank=True)),
                ('primerstart', models.IntegerField(null=True, db_column='PrimerStart', blank=True)),
                ('primerstop', models.IntegerField(null=True, db_column='PrimerStop', blank=True)),
            ],
            options={
                'db_table': 'manipulateblatinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modifications',
            fields=[
                ('tablekey', models.AutoField(serialize=False, primary_key=True, db_column='TableKey')),
                ('tagsequence', models.CharField(max_length=50, null=True, db_column='TagSequence', blank=True)),
                ('tagname', models.IntegerField(null=True, db_column='TagName', blank=True)),
            ],
            options={
                'db_table': 'modifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pcrproducts',
            fields=[
                ('productkey', models.AutoField(serialize=False, primary_key=True, db_column='ProductKey')),
                ('productname', models.CharField(max_length=50, null=True, db_column='ProductName', blank=True)),
                ('fprimerid', models.IntegerField(null=True, db_column='FPrimerID', blank=True)),
                ('rprimerid', models.IntegerField(null=True, db_column='RPrimerID', blank=True)),
                ('version', models.IntegerField(null=True, db_column='Version', blank=True)),
                ('notes', models.CharField(max_length=500, db_column='Notes')),
                ('active', models.TextField(db_column='Active')),
            ],
            options={
                'db_table': 'pcrproducts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Primerinfo',
            fields=[
                ('gene', models.CharField(max_length=50, null=True, db_column='Gene', blank=True)),
                ('exonfragment', models.CharField(max_length=50, null=True, db_column='ExonFragment', blank=True)),
                ('chromosome', models.CharField(max_length=50, null=True, db_column='Chromosome', blank=True)),
                ('primernameconc', models.CharField(max_length=50, null=True, db_column='PrimerNameConc', blank=True)),
                ('primername', models.CharField(max_length=100, serialize=False, primary_key=True, db_column='PrimerName')),
                ('newname', models.CharField(max_length=100, null=True, db_column='NewName', blank=True)),
                ('primerseq', models.CharField(max_length=100, null=True, db_column='Primerseq', blank=True)),
                ('pcrprog', models.CharField(max_length=100, null=True, db_column='PCRProg', blank=True)),
                ('pcrcond', models.CharField(max_length=100, null=True, db_column='PCRCond', blank=True)),
                ('modification', models.CharField(max_length=50, null=True, db_column='Modification', blank=True)),
                ('ampliconsize', models.CharField(max_length=50, null=True, db_column='AmpliconSize', blank=True)),
                ('version', models.CharField(max_length=50, null=True, db_column='Version', blank=True)),
                ('stockconc', models.CharField(max_length=50, null=True, db_column='StockConc', blank=True)),
                ('tray', models.CharField(max_length=50, null=True, db_column='Tray', blank=True)),
                ('grid1', models.CharField(max_length=50, null=True, db_column='GRID1', blank=True)),
                ('grid2', models.CharField(max_length=50, null=True, db_column='GRID2', blank=True)),
                ('grid3', models.CharField(max_length=50, null=True, db_column='GRID3', blank=True)),
                ('grid4', models.CharField(max_length=50, null=True, db_column='GRID4', blank=True)),
                ('grid5', models.CharField(max_length=50, null=True, db_column='GRID5', blank=True)),
                ('grid6', models.CharField(max_length=50, null=True, db_column='GRID6', blank=True)),
                ('grid7', models.CharField(max_length=50, null=True, db_column='GRID7', blank=True)),
                ('grid8', models.CharField(max_length=50, null=True, db_column='GRID8', blank=True)),
                ('grid9', models.CharField(max_length=50, null=True, db_column='GRID9', blank=True)),
                ('grid10', models.CharField(max_length=50, null=True, db_column='GRID10', blank=True)),
                ('gridcomb', models.CharField(max_length=50, null=True, db_column='GRIDCOMB', blank=True)),
                ('supplier', models.CharField(max_length=50, null=True, db_column='Supplier', blank=True)),
                ('datemade', models.CharField(max_length=50, null=True, db_column='DateMade', blank=True)),
                ('productcode', models.CharField(max_length=50, null=True, db_column='ProductCode', blank=True)),
                ('expirydate', models.CharField(max_length=50, null=True, db_column='ExpiryDate', blank=True)),
                ('batchnumber', models.CharField(max_length=50, null=True, db_column='BatchNumber', blank=True)),
                ('oligono', models.CharField(max_length=50, null=True, db_column='OligoNo', blank=True)),
                ('shipmentdate', models.CharField(max_length=50, null=True, db_column='ShipmentDate', blank=True)),
                ('snpchecked', models.CharField(max_length=50, null=True, db_column='SNPChecked', blank=True)),
                ('dateofsnpcheck', models.CharField(max_length=50, null=True, db_column='DateOfSNPCheck', blank=True)),
                ('snpdbbuild', models.CharField(max_length=50, null=True, db_column='SNPdbBuild', blank=True)),
                ('snpresult', models.CharField(max_length=100, null=True, db_column='SNPResult', blank=True)),
                ('assay', models.CharField(max_length=100, null=True, db_column='Assay', blank=True)),
                ('correctprimerinlab', models.CharField(max_length=50, null=True, db_column='CorrectPrimerInLab', blank=True)),
                ('listsandgsmupdated', models.CharField(max_length=50, null=True, db_column='ListsandGSMUpdated', blank=True)),
                ('ucsc', models.CharField(max_length=50, null=True, db_column='UCSC', blank=True)),
                ('nt', models.CharField(max_length=100, null=True, db_column='NT', blank=True)),
                ('notes', models.CharField(max_length=300, null=True, db_column='Notes', blank=True)),
                ('primersvalidated', models.CharField(max_length=50, null=True, db_column='PrimersValidated', blank=True)),
                ('rs', models.CharField(max_length=50, null=True, db_column='RS', blank=True)),
                ('strand', models.CharField(max_length=50, null=True, db_column='Strand', blank=True)),
                ('start', models.CharField(max_length=50, null=True, db_column='Start', blank=True)),
                ('stop', models.CharField(max_length=50, null=True, db_column='Stop', blank=True)),
            ],
            options={
                'db_table': 'primerinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Primerinformation',
            fields=[
                ('primerkey', models.AutoField(serialize=False, primary_key=True, db_column='PrimerKey')),
                ('geneshgncid', models.IntegerField(null=True, db_column='GenesHGNCID', blank=True)),
                ('exon', models.CharField(max_length=50, null=True, db_column='Exon', blank=True)),
                ('exon_2', models.CharField(max_length=50, null=True, db_column='Exon_2', blank=True)),
                ('chromosome', models.IntegerField(null=True, db_column='Chromosome', blank=True)),
                ('primername', models.CharField(max_length=50, unique=True, null=True, db_column='PrimerName', blank=True)),
                ('sequence', models.CharField(max_length=75, null=True, db_column='Sequence', blank=True)),
                ('modification', models.IntegerField(null=True, db_column='Modification', blank=True)),
                ('version', models.IntegerField(null=True, db_column='Version', blank=True)),
                ('pcrconditions', models.CharField(max_length=500, null=True, db_column='PCRConditions', blank=True)),
                ('pcrprogram', models.CharField(max_length=500, null=True, db_column='PCRProgram', blank=True)),
                ('assay', models.IntegerField(null=True, db_column='Assay', blank=True)),
                ('ucsc', models.CharField(max_length=500, null=True, db_column='UCSC', blank=True)),
            ],
            options={
                'db_table': 'primerinformation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Snpcheck',
            fields=[
                ('snpcheckkey', models.AutoField(serialize=False, primary_key=True, db_column='SNPCheckKey')),
                ('primerkey', models.IntegerField(db_column='PrimerKey')),
                ('result', models.IntegerField(null=True, db_column='Result', blank=True)),
                ('snpchecked', models.IntegerField(null=True, db_column='SNPChecked', blank=True)),
                ('dateofsnpcheck', models.CharField(max_length=50, null=True, db_column='DateofSNPCheck', blank=True)),
                ('dbbuild', models.CharField(max_length=50, null=True, db_column='dbBuild', blank=True)),
                ('rs1', models.CharField(max_length=50, null=True, db_column='RS1', blank=True)),
                ('rs2', models.CharField(max_length=50, null=True, db_column='RS2', blank=True)),
                ('rs3', models.CharField(max_length=50, null=True, db_column='RS3', blank=True)),
                ('nt', models.CharField(max_length=50, null=True, db_column='NT', blank=True)),
                ('notes', models.CharField(max_length=500, null=True, db_column='Notes', blank=True)),
                ('validated', models.CharField(max_length=100, null=True, db_column='Validated', blank=True)),
                ('datestamp', models.DateTimeField(null=True, db_column='DateStamp', blank=True)),
            ],
            options={
                'db_table': 'snpcheck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('storagekey', models.AutoField(serialize=False, primary_key=True, db_column='StorageKey')),
                ('primerkey', models.IntegerField(null=True, db_column='PrimerKey', blank=True)),
                ('tray', models.IntegerField(null=True, db_column='Tray', blank=True)),
                ('grid', models.IntegerField(db_column='Grid')),
                ('pcrproductkey', models.IntegerField(null=True, db_column='PCRProductKey', blank=True)),
                ('active', models.TextField(db_column='Active')),
                ('concentration', models.IntegerField(null=True, db_column='Concentration', blank=True)),
            ],
            options={
                'db_table': 'storage',
                'managed': False,
            },
        ),
    ]
